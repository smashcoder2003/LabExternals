import unittest
import DataStructures.DrivenCode.RadixSort.main as rs


class RadixSortTestCases(unittest.TestCase):
    def setUp(self):
        self.test1 = rs.radixSort([11, 11111, 1, 111, 1, 11111111, 11, 1111, 11111111111])
        self.test2 = rs.radixSort([ 4417, 9734, 924, 4013, 9893, 6216, 195, 296, 7553, 4752, 628, 6006, 8381, 3971, 6066])
        self.test3 = rs.radixSort([743, 8495, 9531, 5057, 5748, 8094, 8546, 9561, 1430, 2521, 2175, 4248, 1215, 5021, 3058])
        self.test4 = rs.radixSort([4342, 9573, 5113, 8266, 2107, 9646, 3822, 99, 9294, 5176, 5283, 6522, 4041, 4028, 2738])
        self.test5 = rs.radixSort([9475, 1425, 1081, 5413, 7307, 2368, 128, 7195, 6375, 7927, 7703, 4032, 6382, 8771, 3016])

    def test_1(self):
        statement = "\n----------------------------------------------------------------------\narray : {}" \
                    "\nExpected : {} \n Actual : {}".format(
            [11, 11111, 1, 111, 1, 11111111, 11, 1111, 11111111111]
            ,[1, 1, 11, 11, 111, 1111, 11111, 11111111, 11111111111],
            self.test1)
        self.assertEquals(self.test1,[1, 1, 11, 11, 111, 1111, 11111, 11111111, 11111111111],statement)

    def test_2(self):
        statement = "\n----------------------------------------------------------------------\narray : {}" \
                    "\nExpected : {} \n Actual : {}".format(
            [4417, 9734, 924, 4013, 9893, 6216, 195, 296, 7553, 4752, 628, 6006, 8381, 3971, 6066]
            ,[195, 296, 628, 924, 3971, 4013, 4417, 4752, 6006, 6066, 6216, 7553, 8381, 9734, 9893],
            self.test2)
        self.assertEquals(self.test2,[195, 296, 628, 924, 3971, 4013, 4417, 4752, 6006, 6066, 6216, 7553, 8381, 9734, 9893],statement)

    def test_3(self):
        statement ="\n----------------------------------------------------------------------\narray : {}" \
                    "\nExpected : {} \n Actual : {}".format(
            [743, 8495, 9531, 5057, 5748, 8094, 8546, 9561, 1430, 2521, 2175, 4248, 1215, 5021, 3058]
            ,[743, 1215, 1430, 2175, 2521, 3058, 4248, 5021, 5057, 5748, 8094, 8495, 8546, 9531, 9561],
            self.test3)
        self.assertEquals(self.test3,[743, 1215, 1430, 2175, 2521, 3058, 4248, 5021, 5057, 5748, 8094, 8495, 8546, 9531, 9561],statement)

    def test_4(self):
        statement ="\n----------------------------------------------------------------------\narray : {}" \
                    "\nExpected : {} \n Actual : {}".format(
            [4342, 9573, 5113, 8266, 2107, 9646, 3822, 99, 9294, 5176, 5283, 6522, 4041, 4028, 2738]
            ,[99, 2107, 2738, 3822, 4028, 4041, 4342, 5113, 5176, 5283, 6522, 8266, 9294, 9573, 9646],
            self.test4)
        self.assertEquals(self.test4,[99, 2107, 2738, 3822, 4028, 4041, 4342, 5113, 5176, 5283, 6522, 8266, 9294, 9573, 9646],statement)

    def test_5(self):
        statement ="\n----------------------------------------------------------------------\narray : {}" \
                    "\nExpected : {} \n Actual : {}".format(
            [9475, 1425, 1081, 5413, 7307, 2368, 128, 7195, 6375, 7927, 7703, 4032, 6382, 8771, 3016]
            ,[128, 1081, 1425, 2368, 3016, 4032, 5413, 6375, 6382, 7195, 7307, 7703, 7927, 8771, 9475],
            self.test5)
        self.assertEquals(self.test5,[128, 1081, 1425, 2368, 3016, 4032, 5413, 6375, 6382, 7195, 7307, 7703, 7927, 8771, 9475],statement)
